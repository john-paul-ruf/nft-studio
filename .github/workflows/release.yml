name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            files: |
              build/**/*.AppImage
              build/**/*.deb
          - os: windows-latest
            platform: win
            files: |
              build/**/NFT\ Studio\ Setup*.exe
              build/**/NFT\ Studio.exe
          - os: macos-latest
            platform: mac
            files: |
              build/**/*.dmg
              build/**/*.zip
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install --ignore-scripts
      
      - name: Rebuild native modules
        run: npm run rebuild
        continue-on-error: true
      
      - name: Build application
        run: npm run build
      
      - name: Create distribution
        run: |
          if [ "${{ matrix.platform }}" = "mac" ]; then
            npx electron-builder --mac -c.mac.artifactName='${productName}-${version}-x64.${ext}' --publish=never
          else
            npx electron-builder --${{ matrix.platform }} --publish=never
          fi
      
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.files }}
          generate_release_notes: true
          body: |
            ## Changes in this Release
            _See below for commit history_

            ---

            does it work? may the odds be ever in your favor...
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}